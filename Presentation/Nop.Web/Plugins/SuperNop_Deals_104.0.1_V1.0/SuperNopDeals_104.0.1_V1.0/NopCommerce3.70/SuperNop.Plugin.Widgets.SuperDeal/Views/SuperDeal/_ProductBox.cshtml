@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
@using Nop.Web.Framework;
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}
<div class="product-item" data-productid="@Model.Id">
    <div class="picture">
        @if (Model.CustomProperties.ContainsKey("DealDiscount") && Model.CustomProperties["DealDiscount"] != null)
        {
            <div class="sncdiscount-badge">@Model.CustomProperties["DealDiscount"]@T("Admin.Plugin.SuperDeal.Web.Discount")</div>
        }
        <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@Model.DefaultPictureModel.Title">
            <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
        </a>
    </div>
    <div class="details">
        <h2 class="product-title">
            <a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })">@Model.Name</a>
        </h2>
        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
        {
            int ratingPercent = 0;
            if (Model.ReviewOverviewModel.TotalReviews != 0)
            {
                ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
            }
            <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                <div class="rating">
                    <div style="width: @(ratingPercent)%">
                    </div>
                </div>
            </div>
        }
        <div class="description">
            @Html.Raw(Model.ShortDescription)
        </div>
        <div class="add-info">
            @Html.Widget("productbox_addinfo_before", Model.Id)
            <div class="prices">
                @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                {
                    <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                }
                <span class="price actual-price">@Model.ProductPrice.Price</span>
                @if (Model.ProductPrice.DisplayTaxShippingInfo)
                {
                    var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <span class="tax-shipping-info">
                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                }
            </div>
            @Html.Widget("productbox_addinfo_middle", Model.Id)
            <div class="buttons">
                @*<input type="button" value="@T("Products.Details")" class="button-1 product-box-detail-button" onclick="setLocation('@Url.RouteUrl("Product", new { SeName = Model.SeName })')" />*@
                @if (!Model.ProductPrice.DisableBuyButton)
                {
                    var addToCartText = T("ShoppingCart.AddToCart").Text;
                    if (Model.ProductPrice.IsRental)
                    {
                        addToCartText = T("ShoppingCart.Rent").Text;
                    }
                    if (Model.ProductPrice.AvailableForPreOrder)
                    {
                        addToCartText = T("ShoppingCart.PreOrder").Text;
                    }
                    <input type="button" value="@(addToCartText)" class="button-2 product-box-add-to-cart-button" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;" />
                }
                @if (!Model.ProductPrice.DisableAddToCompareListButton)
                {
                    <input type="button" value="@T("ShoppingCart.AddToCompareList")" title="@T("ShoppingCart.AddToCompareList")" class="button-2 add-to-compare-list-button" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;" />
                }
                @if (!Model.ProductPrice.DisableWishlistButton)
                {
                    <input type="button" value="@T("ShoppingCart.AddToWishlist")" title="@T("ShoppingCart.AddToWishlist")" class="button-2 add-to-wishlist-button" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;" />
                }
            </div>
            @if (Model.CustomProperties.ContainsKey("DealEndDateTime") && Model.CustomProperties["DealEndDateTime"] != null)
            {
                if (Model.CustomProperties.ContainsKey("DealType") && Model.CustomProperties["DealType"] != null)
                {
                    if (Model.CustomProperties["DealType"] == "todays")
                    {
                        <br />
                        <text>Ends in </text><span id="dealcountdown-productid-@Model.Id"></span>
                    }
                    else if (Model.CustomProperties["DealType"] == "upcoming")
                    {
                        <text>Starts in </text><span id="dealcountdown-productid-@Model.Id"></span>
                    }
                    else
                    {
                        <br />
                        <text>Deal over</text>
                    }
                }

                <script>

                    CountDownTimer('@Model.CustomProperties["DealEndDateTime"]', 'dealcountdown-productid-@Model.Id');

                    function CountDownTimer(dt, id) {
                        var end = new Date(dt);

                        var second = 1000;
                        var minute = second * 60;
                        var hour = minute * 60;
                        var day = hour * 24;
                        var timer, _day;

                        function showRemaining() {
                            var now = new Date();
                            var distance = end - now;
                            if (distance < 0) {

                                clearInterval(timer);
                                //document.getElementById(id).innerHTML = 'EXPIRED!';

                                return;
                            }
                            var days = Math.floor(distance / _day);
                            var hours = Math.floor((distance % day) / hour);
                            var minutes = Math.floor((distance % hour) / minute);
                            var seconds = Math.floor((distance % minute) / second);

                            //document.getElementById(id).innerHTML = days + 'days ';
                            document.getElementById(id).innerHTML = hours + 'h ';
                            document.getElementById(id).innerHTML += minutes + 'm ';
                            document.getElementById(id).innerHTML += seconds + 's';
                        }

                        timer = setInterval(showRemaining, 1000);
                    }

                </script>
            }
            @Html.Widget("productbox_addinfo_after", Model.Id)
        </div>
    </div>
</div>
